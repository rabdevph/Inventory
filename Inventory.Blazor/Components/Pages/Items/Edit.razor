@page "/items/{id:int}/edit"
@rendermode InteractiveServer
@using System.Text.Json
@using Inventory.Shared.Dtos.Items
@using System.ComponentModel.DataAnnotations

<PageTitle>Edit Item - Inventory Management</PageTitle>

@if (isLoading)
{
    <div class="flex items-center justify-center min-h-96">
        <div class="text-center">
            <div class="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4"></div>
            <p class="text-gray-600">Loading item details...</p>
        </div>
    </div>
}
else if (!string.IsNullOrEmpty(errorMessage))
{
    <!-- Header with Back Button -->
    <div class="flex items-center gap-4 mb-6">
        <button @onclick="GoBack"
            class="flex items-center gap-2 px-3 py-2 text-sm text-gray-600 hover:text-gray-900 transition-colors">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
            </svg>
            Back to Items
        </button>
    </div>

    <!-- Error State -->
    <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-8 text-center">
        <div class="text-red-600 mb-4">
            <svg class="w-12 h-12 mx-auto" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                    d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z">
                </path>
            </svg>
        </div>
        <h3 class="text-lg font-medium text-gray-900 mb-2">Error Loading Item</h3>
        <p class="text-red-600 mb-4">@errorMessage</p>
        <button @onclick="LoadItem" class="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors">
            Try Again
        </button>
    </div>
}
else if (item != null)
{
    <!-- Header Section with Navigation and Item Info -->
    <div class="flex items-center justify-between mb-6">
        <div class="flex items-center gap-4">
            <button @onclick="GoBack"
                class="flex items-center gap-2 px-3 py-2 text-sm text-gray-600 hover:text-gray-900 transition-colors">
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
                </svg>
                Back to Items
            </button>
            <div class="h-6 border-l border-gray-300"></div>
            <div>
                <h1 class="text-2xl font-bold text-gray-900">Edit Item</h1>
                <p class="text-sm text-gray-500">Item ID: @item.Id</p>
            </div>
        </div>

        <!-- Status Badge -->
        <span
            class="@(item.IsActive ? "bg-green-100 text-green-800" : "bg-red-100 text-red-800") px-3 py-1 rounded-lg text-sm font-medium">
            @item.StatusBadge
        </span>
    </div>

    <!-- Success/Error Notifications -->
    @if (!string.IsNullOrEmpty(saveMessage))
    {
        <div class="@(saveSuccess ? "bg-green-50 border-green-200" : "bg-red-50 border-red-200") border rounded-lg p-4 mb-6">
            <div class="flex items-start gap-3">
                @if (saveSuccess)
                {
                    <div class="flex-shrink-0">
                        <svg class="w-5 h-5 text-green-600 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                        </svg>
                    </div>
                    <div class="flex-1">
                        <h3 class="text-sm font-medium text-green-800">Update Successful</h3>
                        @if (updatedFields.Any())
                        {
                            <p class="text-sm text-green-700 mt-1">@saveMessage</p>
                            <div class="mt-2 text-xs text-green-600">
                                <p class="font-medium">Updated at: @(updateTimestamp?.ToString("MMM dd, yyyy 'at' h:mm:ss tt") ??
                                                        DateTime.Now.ToString("MMM dd, yyyy 'at' h:mm:ss tt"))</p>
                            </div>
                        }
                        else
                        {
                            <p class="text-sm text-green-700 mt-1">@saveMessage</p>
                        }
                    </div>
                }
                else
                {
                    <div class="flex-shrink-0">
                        <svg class="w-5 h-5 text-red-600 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                        </svg>
                    </div>
                    <div class="flex-1">
                        <h3 class="text-sm font-medium text-red-800">@(errorTitle ?? "Update Failed")</h3>
                        <p class="text-sm text-red-700 mt-1">@saveMessage</p>
                    </div>
                }
                <button @onclick="() => { saveMessage = null; errorTitle = null; }"
                    class="flex-shrink-0 text-gray-400 hover:text-gray-600">
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                    </svg>
                </button>
            </div>
        </div>
    }

    <!-- Edit Form -->
    <div class="bg-white rounded-lg shadow-sm border border-gray-200">
        <div class="px-6 py-4 border-b border-gray-200">
            <h2 class="text-lg font-semibold text-gray-900">Item Information</h2>
            <p class="text-sm text-gray-500">Update the item details below</p>
        </div>

        <form @onsubmit="HandleSubmit" @onsubmit:preventDefault="true" class="p-6">
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <!-- Item Name -->
                <div class="md:col-span-2">
                    <label for="name" class="block text-sm font-medium text-gray-700 mb-2">
                        Item Name <span class="text-red-500">*</span>
                    </label>
                    <input type="text" id="name" @bind="updateDto.Name" @bind:event="oninput"
                        class="@GetInputClass("Name") w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
                        placeholder="Enter item name" maxlength="200" />
                    @if (GetValidationError("Name") != null)
                    {
                        <p class="mt-1 text-sm text-red-600">@GetValidationError("Name")</p>
                    }
                </div>

                <!-- Unit -->
                <div>
                    <label for="unit" class="block text-sm font-medium text-gray-700 mb-2">
                        Unit <span class="text-red-500">*</span>
                    </label>
                    <input type="text" id="unit" @bind="updateDto.Unit" @bind:event="oninput"
                        class="@GetInputClass("Unit") w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
                        placeholder="e.g., pieces, kg, liters" maxlength="50" />
                    @if (GetValidationError("Unit") != null)
                    {
                        <p class="mt-1 text-sm text-red-600">@GetValidationError("Unit")</p>
                    }
                </div>

                <!-- Current Quantity (Read-only) -->
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Current Quantity</label>
                    <div class="flex items-center justify-between px-3 py-1.5 bg-gray-50 border border-gray-300 rounded-lg">
                        <div class="flex items-center gap-3">
                            <span class="text-lg font-semibold text-gray-900">@item.Quantity</span>
                            <span class="text-sm text-gray-500">@item.Unit</span>
                        </div>
                        <div>
                            <span class="@GetStockBadgeClass() px-2 py-1 rounded-lg text-xs font-medium">
                                @GetStockStatusText()
                            </span>
                        </div>
                    </div>
                    <p class="mt-1 text-xs text-gray-500">Quantity changes are handled through stock adjustments</p>
                </div>

                <!-- Description -->
                <div class="md:col-span-2">
                    <label for="description" class="block text-sm font-medium text-gray-700 mb-2">Description</label>
                    <textarea id="description" @bind="updateDto.Description" @bind:event="oninput" rows="4"
                        class="@GetInputClass("Description") w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors resize-none"
                        placeholder="Enter item description (optional)" maxlength="1000"></textarea>
                    @if (GetValidationError("Description") != null)
                    {
                        <p class="mt-1 text-sm text-red-600">@GetValidationError("Description")</p>
                    }
                </div>
            </div>

            <!-- Form Actions -->
            <div class="flex items-center justify-between pt-6 mt-6 border-t border-gray-200">
                <div class="flex items-center gap-3">
                    <button type="button" @onclick="GoBack"
                        class="px-4 py-2 text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors">
                        Cancel
                    </button>
                    <button type="submit" disabled="@(isSaving || !IsFormValid())"
                        class="@GetSaveButtonClass() px-6 py-2 rounded-lg transition-colors flex items-center gap-2">
                        @if (isSaving)
                        {
                            <svg class="animate-spin -ml-1 mr-2 h-4 w-4 text-white" fill="none" viewBox="0 0 24 24">
                                <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4">
                                </circle>
                                <path class="opacity-75" fill="currentColor"
                                    d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z">
                                </path>
                            </svg>
                            <text>Saving...</text>
                        }
                        else
                        {
                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                            </svg>
                            <text>Save Changes</text>
                        }
                    </button>
                </div>

                <!-- Item Timestamps -->
                <div class="text-right text-xs text-gray-500">
                    <p>Created: @GetLocalTime(item.CreatedAt).ToString("MMM dd, yyyy 'at' h:mm tt")</p>
                    @if (updateTimestamp.HasValue)
                    {
                        <p>Updated: @updateTimestamp.Value.ToString("MMM dd, yyyy 'at' h:mm tt")</p>
                    }
                    else if (item.UpdatedAt.HasValue)
                    {
                        <p>Updated: @GetLocalTime(item.UpdatedAt.Value).ToString("MMM dd, yyyy 'at' h:mm tt")</p>
                    }
                </div>
            </div>
        </form>
    </div>
}